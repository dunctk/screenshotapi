# Multi-stage build for x86_64 Lambda
FROM --platform=linux/amd64 rust:1.75-slim as builder

# Install system dependencies for building
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy source files
COPY Cargo.toml Cargo.lock ./
COPY src ./src

# Build the application
RUN cargo build --release

# Runtime stage - AWS Lambda base image
FROM --platform=linux/amd64 public.ecr.aws/lambda/provided:al2-x86_64

# Install Chrome and dependencies
RUN yum update -y && yum install -y \
    wget unzip \
    libX11 libXcomposite libXdamage libXext libXi libXtst libXrandr \
    alsa-lib pango atk cairo-gobject gtk3 gdk-pixbuf2 libdrm libxss \
    xorg-x11-fonts-100dpi xorg-x11-fonts-75dpi xorg-x11-utils \
    xorg-x11-fonts-cyrillic xorg-x11-fonts-Type1 xorg-x11-fonts-misc \
    liberation-fonts && \
    wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm && \
    yum install -y google-chrome-stable_current_x86_64.rpm && \
    rm google-chrome-stable_current_x86_64.rpm && \
    yum clean all

# Verify Chrome installation
RUN /usr/bin/google-chrome-stable --version

# Copy the binary from builder stage
COPY --from=builder /app/target/release/screenshotapi ${LAMBDA_RUNTIME_DIR}/bootstrap

# Make executable
RUN chmod +x ${LAMBDA_RUNTIME_DIR}/bootstrap

# Set environment variables
ENV RUST_LOG=info
ENV CHROME_PATH=/usr/bin/google-chrome-stable

CMD ["bootstrap"] 